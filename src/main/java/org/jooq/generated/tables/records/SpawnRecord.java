/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.generated.tables.Spawn;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SpawnRecord extends UpdatableRecordImpl<SpawnRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>SPAWN.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>SPAWN.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>SPAWN.ARENA_ID</code>.
     */
    public void setArenaId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>SPAWN.ARENA_ID</code>.
     */
    public Integer getArenaId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>SPAWN.RELATIVE_X</code>.
     */
    public void setRelativeX(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>SPAWN.RELATIVE_X</code>.
     */
    public Double getRelativeX() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>SPAWN.RELATIVE_Y</code>.
     */
    public void setRelativeY(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>SPAWN.RELATIVE_Y</code>.
     */
    public Double getRelativeY() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>SPAWN.RELATIVE_Z</code>.
     */
    public void setRelativeZ(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>SPAWN.RELATIVE_Z</code>.
     */
    public Double getRelativeZ() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>SPAWN.YAW</code>.
     */
    public void setYaw(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>SPAWN.YAW</code>.
     */
    public Double getYaw() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>SPAWN.PITCH</code>.
     */
    public void setPitch(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>SPAWN.PITCH</code>.
     */
    public Double getPitch() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpawnRecord
     */
    public SpawnRecord() {
        super(Spawn.SPAWN);
    }

    /**
     * Create a detached, initialised SpawnRecord
     */
    public SpawnRecord(Integer id, Integer arenaId, Double relativeX, Double relativeY, Double relativeZ, Double yaw, Double pitch) {
        super(Spawn.SPAWN);

        setId(id);
        setArenaId(arenaId);
        setRelativeX(relativeX);
        setRelativeY(relativeY);
        setRelativeZ(relativeZ);
        setYaw(yaw);
        setPitch(pitch);
        resetChangedOnNotNull();
    }
}
